package net.corda.behave.scenarios.api

import cucumber.api.java8.En
import net.corda.behave.scenarios.ScenarioState
import net.corda.core.messaging.CordaRPCOps
import net.corda.core.utilities.contextLogger

//interface StepsBlock : En {
abstract class StepsBlock(val state: ScenarioState) : En {

    companion object {
        val log = contextLogger()
    }

    abstract fun initialize()

    fun succeed() = log.info("Step succeeded")

    fun fail(message: String) = state.fail(message)

    fun<T> error(message: String) = state.error<T>(message)

    fun node(name: String) = state.nodeBuilder(name)

    fun withNetwork(action: ScenarioState.() -> Unit) {
        state.withNetwork(action)
    }

    fun <T> withClient(nodeName: String, action: (CordaRPCOps) -> T): T {
        return state.withClient(nodeName, action)
    }
}
